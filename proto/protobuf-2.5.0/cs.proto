option java_package = "com.game.logic.net"; 
option java_outer_classname = "Cs"; 

// 消息类型
enum MSG_TYPE
{
    DIR_REQ=1;
	DIR_RES=2;
	AUTH_REQ=3;
	AUTH_RES=4;
	
    LOGIN_REQ=5;
	LOGIN_RES=6;

    HEART_REQ=9;			// 心跳包请求
	HEART_RES=10;			// 心跳包回复
	
	REG_TASK_REQ = 95;		// RegTaskReq 注册7日活动
	REG_TASK_RSP = 96;
	
	MAIL_REQ=47;			// 邮件
	MAIL_RES=48;
	
	
}

message CsMailReq
{
	required int32 MsgType=1; 			// 	MAIL_OP
	required int32 Wid=2;			// 	邮件唯一ID
}

message CsMailRes
{
	required int32 MsgType=1; 			// 	MAIL_SVR_OP
	required int32 Succ = 2;
	repeated CsMail Mails=3;			// 	MAIL_INFO MAIL_CHG 返回
	repeated int32 Wids = 4;		//MAIL_GET MAIL_GET_ALL领取成功的邮件id（全部领取Succ返回错误时也可能部分邮件成功了）MAIL_DEL 删除的邮件
}

message CsItemOne
{
	required int32 type = 1;//1card 2-arm 3-money 4-tili 5-troop
	required int32 id = 2;	// cardid armid moneyid 1 troopid
	required int32 count = 3;//cardnum armnum moneynum tili troopnum
}

message CsMail
{
	required int32 WID=1;
	required int32 DelTime=2; 		// 到期时间 时间到了不能领取
	required string Title=4;		// 邮件标题
	required int32 Send=5;			// 谁发送的 0-系统邮件 大于0表示发送者UIN
	required int32 SendTime=7;		// 发送时间
	required int32 Type = 8;		//MAIL_TYPE
	required string Text=9;		// 邮件正文
	repeated CsItemOne Items=10;	//奖励-最大8种
}

// DIR_REQ
message DirReq
{
	required int32 LastVer=1;
}


message DirWorldInfo
{
	required string Name=1;
	required string IP=2;  /*zone_svr前端连接IP*/
	required int32 Port=3;/*zone_svr前端连接端口*/
	required int32 WorldID=4;
	required int32 RegionID=5;
	required int32 RegionIdx=6;
	required int32 NewFlag=7;	// 1表示新区
	required string AuthIP=8;  /*auth_svr前端连接IP*/
	required int32 AuthPort=9;/*auth_svr前端连接端口*/
	required int32 StatFlag=10;	// 服务器状态 0-维护 1-很好 2-正常 3-繁忙 4-爆满 5-隐藏 6-维护（客户端不可进入）
}

// DIR_RES
message DirRegionInfo
{
	required string Name=1;
	required string Url=2;
	required uint32 StatFlag=3;
}

message DirRes
{
	required int32 LastVer=1;
	repeated DirRegionInfo Region=2;
	repeated DirWorldInfo World=3;
}


// Type=QUICK时  Uin AccountName AccountPasswd都为0 服务器返回Uin
// Type=REGIS  Uin大于0表示补全账号和密码 否则表示新注册，服务器返回Uin
// Type=LOGIN  账号和密码必须有值 服务器返回Uin
// Type=PARTNER partner_id，partner_channel必须有值，Enc为对应token，服务器返回Uin
message AuthReq
{
	required int32 Type=1; // AUTH_TYPE
	required int32 Uin=2;
	optional string partner_id = 4;
	optional int32  partner_channel = 5;	//PARTNER_CHANNEL

	// 用rsa public_key非对称加密的账号和密码二次哈希
	// 约定第一个字节为 账号长度 第二个字节为密码长度
	// |账号长度|密码长度|账号|密码|
	// Enc包含两个字段 len和data len约定为256
	required string Enc=3;

}


// 验证请求服务器回复
// Uin <0表示出错 出错代码为AUTH_ERROR
message AuthRes
{
	required int32 Type=1; 	// AUTH_TYPE
	required string AccountName=2;
	required int32 Uin=3;

	// 服务器返回的签名 LoginReq要发给服务器
	required string Enc=4;

	optional int32 NewAccount = 5;	//1-new account

	optional int32 WorldID = 6;

	optional string 	ZoneIP = 7;
	optional int64 		ZonePort = 8;

	optional int64 		RegionID=9;
}




// 心跳包请求 --客户端把当前服务器时间返回给服务器
message CsHeartReq
{
	required int32 SvrTime=1;		// 	
}

// 心跳包回复 --服务器会根据请求中的时间误差来调整 发给客户端新的服务器时间 小于等于-不用调整 大于0表示服务器时间
message CsHeartRes
{
	required int32 SvrTime=1;		// 
	required int32 MessageCount = 2;	//当前未读聊天数量	
}


message LoginReq
{
	required int32 Uin=1;
	required string AccName=2;
	required string Enc=3;
}

message LoginRes
{
	required int32 Succ=1; 			//1-成功
	required int32 MemID=2; 		// 角色服务器内存ID
	//required PlayerData PlayerData=3;	// 角色数据
	required int32 SvrTime=4;		// 服务器当前时间
	required int32 IsSelectCamp=5;		// 是否选择了阵营 1-是
	required uint32 LoginSeq=6;		// 第几次登录 第一次登录为1
	required int32 RegTaskDay=7;		// 注册活动当前天数
}



message RegTaskInfo
{
	required int32 Id = 1;
	required int32 Value = 2;//当前进度
	required int32 State = 3;// 1-未完成 2-可领奖 3-已领奖 4-已关闭
}

message RegShopBoughtInfo
{
	required int32 Id = 1;	//商品id
	required int32 Count = 2;	//已经购买次数
}

message RegTaskReq
{
	required int32 MsgType = 1;		//enum REG_TASK_REQ_TYPE
	optional int32 TaskId = 3;	//任务id
	optional int32 ShopId = 4;	//商品id
}
 
message RegTaskRsp
{
	required int32 Succ = 1;
	required int32 Day = 2;	//任务开始时刻
	repeated RegTaskInfo infos = 10;
	repeated int32 bought = 11;	//已购买过的商品
	repeated RegShopBoughtInfo bought_infos = 12;//已购买过的商品2
}





